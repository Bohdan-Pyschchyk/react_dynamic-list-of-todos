{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","components/TodoFilter/TodoFilter.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodo","className","map","todo","classNames","id","userId","completed","title","type","onClick","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","selectUser","useState","user","setUser","loading","setLoading","useEffect","person","href","email","name","TodoFilter","filteredTodos","status","setStatus","query","setQuery","onChange","event","target","value","placeholder","length","style","pointerEvents","App","setTodos","filterTodo","setFilterTodo","setSelectedTodo","load","a","loadTodo","todoSelect","todoFilter","filter","includes","find","ReactDOM","render","document","getElementById"],"mappings":"2QAUaA,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,MAAOC,EADgC,EAChCA,WAAYC,EADoB,EACpBA,aADoB,OAGvC,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,mCACE,qBACE,UAAQ,OAERF,UAAWG,IACT,CAAE,4BAA6BJ,IAAiBG,EAAKE,KAJzD,UAOE,oBAAIJ,UAAU,eAAd,SAA8BE,EAAKG,SAClCH,EAAKI,UAEF,oBAAIN,UAAU,eAAd,SACE,mBAAGA,UAAU,mBAIf,oBAAIA,UAAU,iBAElB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWG,IACZ,CAAE,mBAAoBD,EAAKI,WAC3B,CAAE,mBAAoBJ,EAAKI,YAF7B,SAKGJ,EAAKK,UAGV,oBAAIP,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVQ,KAAK,SACLC,QAAS,kBAAMX,EAAWI,EAAKE,KAJjC,SAME,sBAAMJ,UAAU,OAAhB,SACE,mBAAGA,UAAU,uBAhCdE,EAAKE,eCpBtB,SAASM,EAAOC,GAEd,IARYC,EAQNC,EAVS,iEAUYF,EAAM,QAEjC,OAVYC,EAUA,IATL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OASnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,U,MAGd,IClBMC,EAAmB,kBAC9B,qBAAKrB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,uBCMNsB,EAA6B,SAAC,GAA0B,IAAxBpB,EAAuB,EAAvBA,KAAMqB,EAAiB,EAAjBA,WACjD,EAAwBC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAWA,OATAC,qBAAU,WFQW,IAACxB,EEPhBH,IFOgBG,EENVH,EAAKG,OFMwBK,EAAG,iBAAiBL,KENpCY,MAAK,SAAAa,GACxBJ,EAAQI,GACRF,GAAW,QAGd,IAGD,sBAAK5B,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEb2B,EAGA,sBAAK3B,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,gCAIYE,QAJZ,IAIYA,OAJZ,EAIYA,EAAME,MAIlB,wBACEI,KAAK,SACLR,UAAU,SACV,UAAQ,cACRS,QAAS,kBAAMc,EAAW,SAI9B,sBAAKvB,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,gBACGE,QADH,IACGA,OADH,EACGA,EAAMK,QAGT,oBAAGP,UAAU,QAAQ,UAAQ,aAA7B,UAEO,OAAJE,QAAI,IAAJA,KAAMI,UACL,wBAAQN,UAAU,kBAAlB,kBAEA,wBAAQA,UAAU,kBAAlB,qBAGD,OAED,mBAAG+B,KAAI,wBAAYN,QAAZ,IAAYA,OAAZ,EAAYA,EAAMO,OAAzB,gBACGP,QADH,IACGA,OADH,EACGA,EAAMQ,gBApCf,cAAC,EAAD,QCvBKC,EAA8B,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5C,EAA4BX,mBAAS,IAArC,mBAAOY,EAAP,KAAeC,EAAf,KACA,EAA0Bb,mBAAS,IAAnC,mBAAOc,EAAP,KAAcC,EAAd,KAMA,OAJAV,qBAAU,WACRM,EAAcC,EAAQE,KACrB,CAACF,EAAQE,IAGV,uBAAMtC,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRwC,SAAU,SAACC,GAAD,OAAWJ,EAAUI,EAAMC,OAAOC,QAF9C,UAIE,wBAAQA,MAAM,MAAd,iBAGA,wBAAQA,MAAM,SAAd,oBAGA,wBAAQA,MAAM,YAAd,8BAON,oBAAG3C,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRQ,KAAK,OACLR,UAAU,QACV4C,YAAY,YACZD,MAAOL,EACPE,SAAU,SAACC,GAAD,OAAWF,EAASE,EAAMC,OAAOC,UAG7C,sBAAM3C,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdsC,EAAMO,OAAS,GACd,sBAAM7C,UAAU,gBAAgB8C,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRvC,KAAK,SACLR,UAAU,SACVS,QAAS,kBAAM8B,EAAS,gBC3CzBS,EAAgB,WAC3B,MAA0BxB,mBAAiB,IAA3C,mBAAO3B,EAAP,KAAcoD,EAAd,KACA,EAAoCzB,mBAAiB,IAArD,mBAAO0B,EAAP,KAAmBC,EAAnB,KACA,EAAwC3B,mBAAS,GAAjD,mBAAOzB,EAAP,KAAqBqD,EAArB,KAEA,EAA8B5B,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACR,IAAMwB,EAAI,uCAAG,4BAAAC,EAAA,sEJAa5C,EAAY,UIAzB,OACL6C,EADK,OAGXN,EAASM,GACTJ,EAAcI,GACd3B,GAAW,GALA,2CAAH,qDAQVyB,MACC,IAEH,IAiBMG,EAAa,SAAClB,GAAD,OAAmBc,EAAgBd,IAEtD,OACE,qCACE,qBAAKtC,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAAYmC,cA3BF,SAACC,EAAgBE,GACrC,IAAMmB,EAAa5D,EAAM6D,QAAO,SAAAxD,GAC9B,OAAQkC,GACN,IAAK,SACH,OAAQlC,EAAKI,WAAaJ,EAAKK,MAAMoD,SAASrB,GAEhD,IAAK,YACH,OAAOpC,EAAKI,WAAaJ,EAAKK,MAAMoD,SAASrB,GAE/C,QACE,OAAOpC,EAAKK,MAAMoD,SAASrB,OAIjCa,EAAcM,QAgBN,qBAAKzD,UAAU,QAAf,SACI2B,EAIE,cAAC,EAAD,CACE9B,MAAOqD,EACPpD,WAAY0D,EACZzD,aAAcA,IALhB,cAAC,EAAD,aAaXA,EAAe,GACd,cAAC,EAAD,CACEG,KAAMgD,EAAWU,MAAK,SAAA1D,GAAI,OAAIA,EAAKE,KAAOL,KAC1CwB,WAAYiC,QC9EtBK,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.98b5b495.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: (value: number) => void;\n  selectedTodo: number;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, selectTodo, selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <>\n          <tr\n            data-cy=\"todo\"\n            key={todo.id}\n            className={classNames(\n              { 'has-background-info-light': selectedTodo === todo.id },\n            )}\n          >\n            <td className=\"is-vcentered\">{todo.userId}</td>\n            {todo.completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <i className=\"fas fa-check\" />\n                </td>\n              )\n              : (\n                <td className=\"is-vcentered\" />\n              )}\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                { 'has-text-danger': !todo.completed },\n                { 'has-text-success': todo.completed },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => selectTodo(todo.id)}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            </td>\n          </tr>\n        </>\n      ))}\n    </tbody>\n  </table>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo?: Todo;\n  selectUser: (value: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, selectUser }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (todo) {\n      getUser(todo.userId).then(person => {\n        setUser(person);\n        setLoading(true);\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => selectUser(0)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo?.completed ? (\n                <strong className=\"has-text-danger\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\ntype Props = {\n  filteredTodos: (status: string, query: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ filteredTodos }) => {\n  const [status, setStatus] = useState('');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    filteredTodos(status, query);\n  }, [status, query]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => setStatus(event.target.value)}\n          >\n            <option value=\"all\">\n              All\n            </option>\n            <option value=\"active\">\n              Active\n            </option>\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => setQuery(event.target.value)}\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","/* eslint-disable no-console */\n/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoFilter } from './components/TodoFilter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filterTodo, setFilterTodo] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState(0);\n\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const load = async () => {\n      const loadTodo = await getTodos();\n\n      setTodos(loadTodo);\n      setFilterTodo(loadTodo);\n      setLoading(true);\n    };\n\n    load();\n  }, []);\n\n  const filteredTodos = (status: string, query: string) => {\n    const todoFilter = todos.filter(todo => {\n      switch (status) {\n        case 'active':\n          return !todo.completed && todo.title.includes(query);\n\n        case 'completed':\n          return todo.completed && todo.title.includes(query);\n\n        default:\n          return todo.title.includes(query);\n      }\n    });\n\n    setFilterTodo(todoFilter);\n  };\n\n  const todoSelect = (query: number) => setSelectedTodo(query);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter filteredTodos={filteredTodos} />\n            </div>\n\n            <div className=\"block\">\n              {!loading\n                ? (\n                  <Loader />\n                ) : (\n                  <TodoList\n                    todos={filterTodo}\n                    selectTodo={todoSelect}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo > 0 && (\n        <TodoModal\n          todo={filterTodo.find(todo => todo.id === selectedTodo)}\n          selectUser={todoSelect}\n        />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}